@mixin vendor($property, $value...){
    -webkit-#{$property}:$value;
    -moz-#{$property}:$value;
    -ms-#{$property}:$value;
    -o-#{$property}:$value;
    #{$property}:$value;
}

@mixin clearfix($important: false) {

  // Determine whether or not to make declarations important.
  @if ($important == false) {
    $important: null;
  } @else {
    $important: !important;
  }

  &:after {
    content: "" $important;
    display: table $important;
    clear: both $important;
  }

}

@mixin site-inner-wrap {
  	@include clearfix();
  	max-width: $global-site-width;
	padding-left: $mobile-side-pad;
	padding-right: $mobile-side-pad;
  	margin-right: auto;
  	margin-left:  auto;
  
  
  @include mq(tablet) {
  	padding-left: $desktop-side-pad;
  	padding-right: $desktop-side-pad;
  }
      
  
}


.site-inner-wrap{
	@include site-inner-wrap;
}



   
@mixin font-weight($weight) {

  @if ($weight == normal) {
    font-weight: 400;
  }

  @elseif ($weight == bold) {
    font-weight: 500;
  }

  @elseif ($weight == black) {
    font-weight: 700;
  }

  @else {
    @warn "#{$weight} is not a valid font-weight."
  }

}

@mixin font-family($family) {

  @if ($family == "sans-serif") {
    font-family:  'Helvetica Neue', Helvetica, Arial, sans-serif;
  }

  @elseif ($family == "serif") {
    font-family: Georgia, Times, 'Times New Roman', serif;
  }

  @else {
    @warn "#{$family} is not a valid font-family."
  }

}



// Generate a font-size and baseline-compatible line-height.
@mixin font-size($font-size, $line-height: auto, $important: false) {

  @if (type-of($font-size) == number) {
    @if (unit($font-size) != "px") {
      @error "`#{$font-size}` needs to be a pixel value.";
    }
  } @else {
    @error "`#{$font-size}` needs to be a number.";
  }

  @if ($important == true) {
    $important: !important;
  } @elseif ($important == false) {
    $important: null;
  } @else {
    @error "`#{$important}` needs to be `true` or `false`."
  }

  // We provide a `px` fallback for old IEs not supporting `rem` values.
  font-size: $font-size $important;
  font-size: ($font-size / $global-font-size) * 1rem $important;

  @if ($line-height == 'auto') {
    line-height: ceil($font-size / $global-line-height) * ($global-line-height / $font-size) $important;
  }

  @else {

    @if (type-of($line-height) == number or $line-height == 'inherit' or $line-height == 'normal') {
      line-height: $line-height $important;
    }

    @elseif ($line-height != 'none' and $line-height != false) {
      @error "Dâ€™oh! `#{$line-height}` is not a valid value for `$line-height`."
    }

  }

}




@mixin hocus() {
  &:hover,
  &:focus {
    @content;
  }
}